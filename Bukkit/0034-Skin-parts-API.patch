From 2a82ed13dfe55d417f59569add2b7062a9196755 Mon Sep 17 00:00:00 2001
From: Jedediah Smith <jedediah@silencegreys.com>
Date: Sat, 20 Sep 2014 23:20:08 -0400
Subject: [PATCH] Skin parts API


diff --git a/src/main/java/org/bukkit/Skin.java b/src/main/java/org/bukkit/Skin.java
index b11f962..5dc9cef 100644
--- a/src/main/java/org/bukkit/Skin.java
+++ b/src/main/java/org/bukkit/Skin.java
@@ -5,6 +5,17 @@ package org.bukkit;
  * A self-contained skin
  */
 public class Skin {
+    // NOTE: ordinals must match bit positions in packet data
+    public static enum Part {
+        CAPE,
+        JACKET,
+        LEFT_SLEEVE,
+        RIGHT_SLEEVE,
+        LEFT_PANTS_LEG,
+        RIGHT_PANTS_LEG,
+        HAT
+    }
+
     public static final Skin EMPTY = new Skin(null, null);
 
     private final String data;
diff --git a/src/main/java/org/bukkit/entity/Player.java b/src/main/java/org/bukkit/entity/Player.java
index 6e63c94..224d597 100644
--- a/src/main/java/org/bukkit/entity/Player.java
+++ b/src/main/java/org/bukkit/entity/Player.java
@@ -195,6 +195,11 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline
     public void setSkin(Skin newSkin);
 
     /**
+     * Get the set of skin parts that are currently visible on the player
+     */
+    public Set<Skin.Part> getSkinParts();
+
+    /**
      * Simultaneously set this player's fake name and {@link Skin} for the given viewer.
      * This method only refreshes the player entity once, whereas calling
      * {@link #setFakeName} and {@link #setFakeSkin} seperately would refresh it twice.
diff --git a/src/main/java/org/bukkit/event/player/PlayerSkinPartsChangeEvent.java b/src/main/java/org/bukkit/event/player/PlayerSkinPartsChangeEvent.java
new file mode 100644
index 0000000..a222f21
--- /dev/null
+++ b/src/main/java/org/bukkit/event/player/PlayerSkinPartsChangeEvent.java
@@ -0,0 +1,32 @@
+package org.bukkit.event.player;
+
+import org.bukkit.Skin;
+import org.bukkit.entity.Player;
+import org.bukkit.event.HandlerList;
+
+import java.util.Set;
+
+public class PlayerSkinPartsChangeEvent extends PlayerEvent {
+
+    private final Set<Skin.Part> parts;
+
+    public PlayerSkinPartsChangeEvent(Player who, Set<Skin.Part> parts) {
+        super(who);
+        this.parts = parts;
+    }
+
+    public Set<Skin.Part> getParts() {
+        return parts;
+    }
+
+    private static final HandlerList handlers = new HandlerList();
+
+    @Override
+    public HandlerList getHandlers() {
+        return handlers;
+    }
+
+    public static HandlerList getHandlerList() {
+        return handlers;
+    }
+}
-- 
1.9.1

