From e385ba9ec76ba6a79f0a3f3179b268b7c83d8c3d Mon Sep 17 00:00:00 2001
From: Joshua Rodriguez <ewized@gmail.com>
Date: Tue, 2 Sep 2014 10:45:25 -0700
Subject: [PATCH] Bind IP after server has been enabled


diff --git a/src/main/java/net/minecraft/server/DedicatedServer.java b/src/main/java/net/minecraft/server/DedicatedServer.java
index 6f1f0d4..a06da0d 100644
--- a/src/main/java/net/minecraft/server/DedicatedServer.java
+++ b/src/main/java/net/minecraft/server/DedicatedServer.java
@@ -119,16 +119,6 @@ public class DedicatedServer extends MinecraftServer implements IMinecraftServer
 
             i.info("Generating keypair");
             this.a(MinecraftEncryption.b());
-            i.info("Starting Minecraft server on " + (this.getServerIp().length() == 0 ? "*" : this.getServerIp()) + ":" + this.L());
-
-            try {
-                this.ai().a(inetaddress, this.L());
-            } catch (Throwable ioexception) { // CraftBukkit - IOException -> Throwable
-                i.warn("**** FAILED TO BIND TO PORT!");
-                i.warn("The exception was: {}", new Object[] { ioexception.toString()});
-                i.warn("Perhaps a server is already running on that port?");
-                return false;
-            }
 
             this.a((PlayerList) (new DedicatedPlayerList(this))); // CraftBukkit
 
@@ -191,6 +181,20 @@ public class DedicatedServer extends MinecraftServer implements IMinecraftServer
                 String s3 = String.format("%.3fs", new Object[] { Double.valueOf((double) i1 / 1.0E9D)});
 
                 i.info("Done (" + s3 + ")! For help, type \"help\" or \"?\"");
+
+                // FireCast start
+                i.info("Binding Minecraft server on " + (this.getServerIp().length() == 0 ? "*" : this.getServerIp()) + ":" + this.L());
+
+                try {
+                    this.ai().a(inetaddress, this.L());
+                } catch (Throwable ioexception) { // CraftBukkit - IOException -> Throwable
+                    i.warn("**** FAILED TO BIND TO PORT!");
+                    i.warn("The exception was: {}", new Object[] { ioexception.toString()});
+                    i.warn("Perhaps a server is already running on that port?");
+                    return false;
+                }
+                // FireCast stop
+
                 if (this.propertyManager.getBoolean("enable-query", false)) {
                     i.info("Starting GS4 status listener");
                     this.k = new RemoteStatusListener(this);
-- 
1.9.1

