From f8c8fa029dc18c9c0ccbb4b14cf89589d2ddca35 Mon Sep 17 00:00:00 2001
From: Jedediah Smith <jedediah@silencegreys.com>
Date: Sun, 9 Mar 2014 04:38:32 -0400
Subject: [PATCH] Disable player list updates


diff --git a/src/main/java/net/minecraft/server/PlayerList.java b/src/main/java/net/minecraft/server/PlayerList.java
index c30ed07..0eef0cf 100644
--- a/src/main/java/net/minecraft/server/PlayerList.java
+++ b/src/main/java/net/minecraft/server/PlayerList.java
@@ -293,7 +293,9 @@ public abstract class PlayerList {
         for (int i = 0; i < this.players.size(); ++i) {
             EntityPlayer entityplayer1 = (EntityPlayer) this.players.get(i);
 
-            if (entityplayer1.getBukkitEntity().canSee(entityplayer.getBukkitEntity())) {
+            if (entityplayer1.getBukkitEntity().canSee(entityplayer.getBukkitEntity()) &&
+                entityplayer1.getBukkitEntity().getPlayerListUpdates()) {
+
                 entityplayer1.playerConnection.sendPacket(packet);
             }
         }
@@ -303,11 +305,11 @@ public abstract class PlayerList {
             EntityPlayer entityplayer1 = (EntityPlayer) this.players.get(i);
 
             // CraftBukkit start
-            if (!entityplayer.getBukkitEntity().canSee(entityplayer1.getBukkitEntity())) {
-                continue;
+            if (entityplayer.getBukkitEntity().canSee(entityplayer1.getBukkitEntity()) &&
+                entityplayer.getBukkitEntity().getPlayerListUpdates()) {
+
+                entityplayer.playerConnection.sendPacket(new PacketPlayOutPlayerInfo(entityplayer1.listName, true, entityplayer1.ping));
             }
-            // .name -> .listName
-            entityplayer.playerConnection.sendPacket(new PacketPlayOutPlayerInfo(entityplayer1.listName, true, entityplayer1.ping));
             // CraftBukkit end
         }
     }
@@ -347,7 +349,9 @@ public abstract class PlayerList {
         for (int i = 0; i < this.players.size(); ++i) {
             EntityPlayer entityplayer1 = (EntityPlayer) this.players.get(i);
 
-            if (entityplayer1.getBukkitEntity().canSee(entityplayer.getBukkitEntity())) {
+            if (entityplayer1.getBukkitEntity().canSee(entityplayer.getBukkitEntity()) &&
+                entityplayer1.getBukkitEntity().getPlayerListUpdates()) {
+
                 entityplayer1.playerConnection.sendPacket(packet);
             } else {
                 entityplayer1.getBukkitEntity().removeDisconnectingPlayer(entityplayer.getBukkitEntity());
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
index 325ad01..479985f 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
@@ -80,6 +80,7 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
     private double health = 20;
     private boolean scaledHealth = false;
     private double healthScale = 20;
+    private boolean playerListUpdates = true;
 
     private final Map<CommandSender, String> fakeNames = new WeakHashMap<CommandSender, String>();
     private final Map<CommandSender, String> fakeDisplayNames = new WeakHashMap<CommandSender, String>();
@@ -247,7 +248,7 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
             CraftPlayer craftViewer = (CraftPlayer) viewer;
             EntityPlayer viewerEntity  = craftViewer.getHandle();
             if(viewerEntity.playerConnection != null) {
-                if(craftViewer.canSee(this)) {
+                if(craftViewer.canSee(this) && craftViewer.getPlayerListUpdates()) {
                     viewerEntity.playerConnection.sendPacket(new PacketPlayOutPlayerInfo(this.getName(), false, 9999));
                 }
 
@@ -267,7 +268,7 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
             CraftPlayer craftViewer = (CraftPlayer) viewer;
             EntityPlayer viewerEntity  = craftViewer.getHandle();
             if(viewerEntity.playerConnection != null) {
-                if(craftViewer.canSee(this)) {
+                if(craftViewer.canSee(this) && craftViewer.getPlayerListUpdates()) {
                     viewerEntity.playerConnection.sendPacket(new PacketPlayOutPlayerInfo(this.getName(), true, this.getHandle().ping));
                 }
 
@@ -402,7 +403,7 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
             EntityPlayer entityplayer = (EntityPlayer) server.getHandle().players.get(i);
             if (entityplayer.playerConnection == null) continue;
 
-            if (entityplayer.getBukkitEntity().canSee(this)) {
+            if (entityplayer.getBukkitEntity().canSee(this) && entityplayer.getBukkitEntity().getPlayerListUpdates()) {
                 entityplayer.playerConnection.sendPacket(oldpacket);
                 entityplayer.playerConnection.sendPacket(packet);
             }
@@ -1122,7 +1123,7 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
         }
 
         //remove the hidden player from this player user list
-        if(other instanceof EntityPlayer) {
+        if(other instanceof EntityPlayer && this.getPlayerListUpdates()) {
             getHandle().playerConnection.sendPacket(new PacketPlayOutPlayerInfo(((CraftPlayer) entity).getPlayerListName(), false, 9999));
         }
     }
@@ -1145,8 +1146,8 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
             entry.updatePlayer(getHandle());
         }
 
-        if(other instanceof EntityPlayer) {
-            getHandle().playerConnection.sendPacket(new PacketPlayOutPlayerInfo(player.getPlayerListName(), true, getHandle().ping));
+        if(other instanceof EntityPlayer && this.getPlayerListUpdates()) {
+            getHandle().playerConnection.sendPacket(new PacketPlayOutPlayerInfo(((CraftPlayer) entity).getPlayerListName(), true, getHandle().ping));
         }
     }
 
@@ -1448,6 +1449,33 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
     }
 
     @Override
+    public void setPlayerListUpdates(boolean enabled) {
+        // Note that fake names are handled by the packet translator in PlayerConnection,
+        // so we should always use real names here.
+        if(this.playerListUpdates && !enabled) {
+            // Clear the player list
+            for(Player player : this.getServer().getOnlinePlayers()) {
+                if(this.canSee(player)) {
+                    this.getHandle().playerConnection.sendPacket(new PacketPlayOutPlayerInfo(player.getPlayerListName(), false, 0));
+                }
+            }
+        } else if(!this.playerListUpdates && enabled) {
+            // Restore the player list
+            for(Player player : this.getServer().getOnlinePlayers()) {
+                if(this.canSee(player)) {
+                    this.getHandle().playerConnection.sendPacket(new PacketPlayOutPlayerInfo(player.getPlayerListName(), true, this.getHandle().ping));
+                }
+            }
+        }
+        this.playerListUpdates = enabled;
+    }
+
+    @Override
+    public boolean getPlayerListUpdates() {
+        return this.playerListUpdates;
+    }
+
+    @Override
     public void setMaxHealth(double amount) {
         super.setMaxHealth(amount);
         this.health = Math.min(this.health, health);
-- 
1.8.5.2 (Apple Git-48)

