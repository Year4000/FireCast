From 0105f6109394db637ff52321e61e2f383f5d212f Mon Sep 17 00:00:00 2001
From: Jedediah Smith <jedediah@silencegreys.com>
Date: Sat, 20 Sep 2014 23:15:32 -0400
Subject: [PATCH] Skin parts API


diff --git a/src/main/java/net/minecraft/server/EntityPlayer.java b/src/main/java/net/minecraft/server/EntityPlayer.java
index 53f58c8..0689ea8 100644
--- a/src/main/java/net/minecraft/server/EntityPlayer.java
+++ b/src/main/java/net/minecraft/server/EntityPlayer.java
@@ -24,6 +24,8 @@ import org.bukkit.craftbukkit.entity.CraftPlayer;
 import org.bukkit.craftbukkit.event.CraftEventFactory;
 import org.bukkit.craftbukkit.inventory.CraftItemStack;
 import org.bukkit.event.inventory.InventoryType;
+import org.bukkit.craftbukkit.util.Skins;
+import org.bukkit.event.player.PlayerSkinPartsChangeEvent;
 import org.bukkit.event.player.PlayerTeleportEvent.TeleportCause;
 // CraftBukkit end
 import org.spigotmc.ProtocolData; // Spigot - protocol patch
@@ -1026,7 +1028,12 @@ public class EntityPlayer extends EntityHuman implements ICrafting {
         } else
         {
             this.b( 1, false, packetplayinsettings.version );
-            datawatcher.watch( 10, new ProtocolData.HiddenByte( (byte) packetplayinsettings.flags ) );
+
+            int skinFlags = datawatcher.getInt(10);
+            if(skinFlags != packetplayinsettings.flags) {
+                datawatcher.watch( 10, new ProtocolData.HiddenByte( (byte) packetplayinsettings.flags ) );
+                Bukkit.getPluginManager().callEvent(new PlayerSkinPartsChangeEvent(this.getBukkitEntity(), Skins.partsFromFlags(skinFlags)));
+            }
         }
         // Spigot end
     }
diff --git a/src/main/java/net/minecraft/server/PacketPlayInSettings.java b/src/main/java/net/minecraft/server/PacketPlayInSettings.java
index ea51d91..f095500 100644
--- a/src/main/java/net/minecraft/server/PacketPlayInSettings.java
+++ b/src/main/java/net/minecraft/server/PacketPlayInSettings.java
@@ -13,6 +13,16 @@ public class PacketPlayInSettings extends Packet {
 
     // Spigot start - protocol patch
     public int version;
+
+    /**
+     * 0x01 - cape
+     * 0x02 - jacket
+     * 0x04 - left sleeve
+     * 0x08 - right sleeve
+     * 0x10 - left pants leg
+     * 0x20 - right pants leg
+     * 0x40 - hat
+     */
     public int flags;
     // Spigot end
 
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
index 8ba890d..5bfbced 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
@@ -183,6 +183,11 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
     }
 
     @Override
+    public Set<Skin.Part> getSkinParts() {
+        return Skins.partsFromFlags(this.getHandle().getDataWatcher().getInt(10));
+    }
+
+    @Override
     public boolean hasFakeSkin(CommandSender viewer) {
         return viewer != null && this.fakeSkins.containsKey(viewer);
     }
diff --git a/src/main/java/org/bukkit/craftbukkit/util/Skins.java b/src/main/java/org/bukkit/craftbukkit/util/Skins.java
index 9003fb2..729169f 100644
--- a/src/main/java/org/bukkit/craftbukkit/util/Skins.java
+++ b/src/main/java/org/bukkit/craftbukkit/util/Skins.java
@@ -4,6 +4,9 @@ import net.minecraft.util.com.mojang.authlib.properties.Property;
 import net.minecraft.util.com.mojang.authlib.properties.PropertyMap;
 import org.bukkit.Skin;
 
+import java.util.EnumSet;
+import java.util.Set;
+
 public abstract class Skins {
     public static Skin fromProperties(PropertyMap profile) {
         for(Property property : profile.get("textures")) {
@@ -37,4 +40,22 @@ public abstract class Skins {
     public static PropertyMap toProperties(Skin skin) {
         return setProperties(skin, new PropertyMap());
     }
+
+    public static Set<Skin.Part> partsFromFlags(int flags) {
+        EnumSet<Skin.Part> parts = EnumSet.noneOf(Skin.Part.class);
+        for(Skin.Part part : Skin.Part.values()) {
+            if((flags & (1 << part.ordinal())) != 0) {
+                parts.add(part);
+            }
+        }
+        return parts;
+    }
+
+    public static int flagsFromParts(Iterable<Skin.Part> parts) {
+        int flags = 0;
+        for(Skin.Part part : parts) {
+            flags |= 1 << part.ordinal();
+        }
+        return flags;
+    }
 }
-- 
1.8.5.2 (Apple Git-48)

